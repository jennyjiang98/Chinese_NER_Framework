<?xml version="1.0" encoding="utf-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Explosion AI</title><link>https://explosion.ai</link><description>Explosion AI is a digital studio specialising in Artificial Intelligence and Natural Language Processing. We’re the makers of spaCy, the leading open-source NLP library.</description><atom:link href="https://explosion.ai/feed" rel="self" type="application/rss+xml"></atom:link><item><title>Introducing spaCy v2.1</title><description><![CDATA[<p><a href="https://explosion.ai/blog/spacy-v2-1"><img src="https://explosion.ai/blog/img/spacy-v2-1.jpg"></img></a></p><p>Version 2.1 of the spaCy Natural Language Processing library includes a huge number of features, improvements and bug fixes. In this post, we highlight some of the things we're especially pleased with, and explain some of the most challenging parts of preparing this big release.</p><p><a href="https://explosion.ai/blog/spacy-v2-1">Read more &rarr;</a></p>]]></description><pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/spacy-v2-1</link><guid isPermaLink="true">https://explosion.ai/blog/spacy-v2-1</guid></item><item><title>Explosion AI in 2017: Our Year in Review</title><description><![CDATA[<p><a href="https://explosion.ai/blog/year-in-review-2017"><img src="https://explosion.ai/blog/img/year-in-review-2017.jpg"></img></a></p><p>We founded Explosion AI in October 2016, so this was our first full calendar year in operation. We set ourselves ambitious goals this year, and we're very happy with how we achieved them. Here's what we got done.</p><p><a href="https://explosion.ai/blog/year-in-review-2017">Read more &rarr;</a></p>]]></description><pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/year-in-review-2017</link><guid isPermaLink="true">https://explosion.ai/blog/year-in-review-2017</guid></item><item><title>Introducing custom pipelines and extensions for spaCy v2.0</title><description><![CDATA[<p><a href="https://explosion.ai/blog/spacy-v2-pipelines-extensions"><img src="https://explosion.ai/blog/img/spacy-pipelines.jpg"></img></a></p><p>As the release candidate for spaCy v2.0 gets closer, we've been excited to implement some of the last outstanding features. One of the best improvements is a new system for adding pipeline components and registering extensions to the Doc, Span and Token objects. In this post, we'll introduce you to the new functionality, and finish with an example extension package, spacymoji.</p><p><a href="https://explosion.ai/blog/spacy-v2-pipelines-extensions">Read more &rarr;</a></p>]]></description><pubDate>Mon, 16 Oct 2017 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/spacy-v2-pipelines-extensions</link><guid isPermaLink="true">https://explosion.ai/blog/spacy-v2-pipelines-extensions</guid></item><item><title>Pseudo-rehearsal: A simple solution to catastrophic forgetting for NLP</title><description><![CDATA[<p><a href="https://explosion.ai/blog/pseudo-rehearsal-catastrophic-forgetting"><img src="https://explosion.ai/blog/img/catastrophic-forgetting.jpg"></img></a></p><p>Sometimes you want to fine-tune a pre-trained model to add a new label or correct some specific errors. This can introduce the &quot;catastrophic forgetting&quot; problem. Pseudo-rehearsal is a good solution: use the original model to label examples, and mix them through your fine-tuning updates.</p><p><a href="https://explosion.ai/blog/pseudo-rehearsal-catastrophic-forgetting">Read more &rarr;</a></p>]]></description><pubDate>Wed, 23 Aug 2017 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/pseudo-rehearsal-catastrophic-forgetting</link><guid isPermaLink="true">https://explosion.ai/blog/pseudo-rehearsal-catastrophic-forgetting</guid></item><item><title>Prodigy: A new tool for radically efficient machine teaching</title><description><![CDATA[<p><a href="https://explosion.ai/blog/prodigy-annotation-tool-active-learning"><img src="https://explosion.ai/blog/img/prodigy.jpg"></img></a></p><p>Machine learning systems are built from both code and data. It's easy to reuse the code but hard to reuse the data, so building AI mostly means doing annotation. This is good, because the examples are how you program the behaviour – the learner itself is really just a compiler. What's not good is the current technology for creating the examples. That's why we're pleased to introduce Prodigy, a downloadable tool for radically efficient machine teaching.</p><p><a href="https://explosion.ai/blog/prodigy-annotation-tool-active-learning">Read more &rarr;</a></p>]]></description><pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/prodigy-annotation-tool-active-learning</link><guid isPermaLink="true">https://explosion.ai/blog/prodigy-annotation-tool-active-learning</guid></item><item><title>Supervised learning is great — it's data collection that's broken</title><description><![CDATA[<p><a href="https://explosion.ai/blog/supervised-learning-data-collection"><img src="https://explosion.ai/blog/img/supervised-learning.jpg"></img></a></p><p>Short of Artificial General Intelligence, we'll always need some way of specifying what we're trying to compute. Labelled examples are a great way to do that, but the process is often tedious. However, the dissatisfaction with supervised learning is misplaced. Instead of waiting for the unsupervised messiah to arrive, we need to fix the way we're collecting and reusing human knowledge.</p><p><a href="https://explosion.ai/blog/supervised-learning-data-collection">Read more &rarr;</a></p>]]></description><pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/supervised-learning-data-collection</link><guid isPermaLink="true">https://explosion.ai/blog/supervised-learning-data-collection</guid></item><item><title>Supervised similarity: Learning symmetric relations from duplicate question data</title><description><![CDATA[<p><a href="https://explosion.ai/blog/supervised-similarity-siamese-cnn"><img src="https://explosion.ai/blog/img/supervised-similarity-siamese-cnn.jpg"></img></a></p><p>Supervised models for text-pair classification let you create software that assigns a label to two texts, based on some relationship between them. When the relationship is symmetric, it can be useful to incorporate this constraint into the model. This post shows how a siamese convolutional neural network performs on two duplicate question data sets, with experimental results and an interactive demo.</p><p><a href="https://explosion.ai/blog/supervised-similarity-siamese-cnn">Read more &rarr;</a></p>]]></description><pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/supervised-similarity-siamese-cnn</link><guid isPermaLink="true">https://explosion.ai/blog/supervised-similarity-siamese-cnn</guid></item><item><title>Deep text-pair classification with Quora's 2017 question dataset</title><description><![CDATA[<p><a href="https://explosion.ai/blog/quora-deep-text-pair-classification"><img src="https://explosion.ai/blog/img/quora.jpg"></img></a></p><p>Quora recently released the first dataset from their platform: a set of 400,000 question pairs, with annotations indicating whether the questions request the same information. This data set is large, real, and relevant — a rare combination. In this post, I'll explain how to solve text-pair tasks with deep learning, using both new and established tips and technologies.</p><p><a href="https://explosion.ai/blog/quora-deep-text-pair-classification">Read more &rarr;</a></p>]]></description><pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/quora-deep-text-pair-classification</link><guid isPermaLink="true">https://explosion.ai/blog/quora-deep-text-pair-classification</guid></item><item><title>Embed, encode, attend, predict: The new deep learning formula for state-of-the-art NLP models</title><description><![CDATA[<p><a href="https://explosion.ai/blog/deep-learning-formula-nlp"><img src="https://explosion.ai/blog/img/deep-learning-formula-nlp.jpg"></img></a></p><p>Over the last six months, a powerful new neural network playbook has come together for Natural Language Processing. The new approach can be summarised as a simple four-step formula: embed, encode, attend, predict. This post explains the components of this new approach, and shows how they're put together in two recent systems.</p><p><a href="https://explosion.ai/blog/deep-learning-formula-nlp">Read more &rarr;</a></p>]]></description><pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/deep-learning-formula-nlp</link><guid isPermaLink="true">https://explosion.ai/blog/deep-learning-formula-nlp</guid></item><item><title>The spaCy user survey: results and analysis</title><description><![CDATA[<p><a href="https://explosion.ai/blog/spacy-user-survey"><img src="https://explosion.ai/blog/img/spacy-user-survey.jpg"></img></a></p><p>In the run-up to the 1.0 release, we asked the spaCy community to give us their feedback on the library. If you're one of the 224 participants who took part — thanks! Here's what we've learned from your responses, how we're already using them to improve the library, and what we're planning next.</p><p><a href="https://explosion.ai/blog/spacy-user-survey">Read more &rarr;</a></p>]]></description><pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/spacy-user-survey</link><guid isPermaLink="true">https://explosion.ai/blog/spacy-user-survey</guid></item><item><title>Building your bot's brain with Node.js and spaCy</title><description><![CDATA[<p><a href="https://explosion.ai/blog/chatbot-node-js-spacy"><img src="https://explosion.ai/blog/img/bot-node.jpg"></img></a></p><p>Natural Language Processing and other AI technologies promise to let us build applications that offer smarter, more context-aware user experiences. However, an application that is almost smart is often very, very dumb. In this tutorial, I'll show you how to set up a better brain for your applications — a Contextual Knowledge Base Graph.</p><p><a href="https://explosion.ai/blog/chatbot-node-js-spacy">Read more &rarr;</a></p>]]></description><pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/chatbot-node-js-spacy</link><guid isPermaLink="true">https://explosion.ai/blog/chatbot-node-js-spacy</guid></item><item><title>spaCy v1.0: Deep Learning with custom pipelines and Keras</title><description><![CDATA[<p><a href="https://explosion.ai/blog/spacy-deep-learning-keras"><img src="https://explosion.ai/blog/img/spacy-deep-learning.jpg"></img></a></p><p>I'm pleased to announce the 1.0 release of spaCy, the fastest NLP library in the world. By far the best part of the 1.0 release is a new system for integrating custom models into spaCy. This post introduces you to the changes, and shows you how to use the new custom pipeline functionality to add a Keras-powered LSTM sentiment analysis model into a spaCy pipeline.</p><p><a href="https://explosion.ai/blog/spacy-deep-learning-keras">Read more &rarr;</a></p>]]></description><pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/spacy-deep-learning-keras</link><guid isPermaLink="true">https://explosion.ai/blog/spacy-deep-learning-keras</guid></item><item><title>An open-source named entity visualiser for the modern web</title><description><![CDATA[<p><a href="https://explosion.ai/blog/displacy-ent-named-entity-visualizer"><img src="https://explosion.ai/blog/img/displacy-ent-js.jpg"></img></a></p><p>Named Entity Recognition is a crucial technology for NLP. Whatever you're doing with text, you usually want to handle names, numbers, dates and other entities differently from regular words. To help you make use of NER, we've released displaCy-ent.js. This post explains how the library works, and how to use it.</p><p><a href="https://explosion.ai/blog/displacy-ent-named-entity-visualizer">Read more &rarr;</a></p>]]></description><pubDate>Wed, 05 Oct 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/displacy-ent-named-entity-visualizer</link><guid isPermaLink="true">https://explosion.ai/blog/displacy-ent-named-entity-visualizer</guid></item><item><title>Introducing Explosion AI</title><description><![CDATA[<p><a href="https://explosion.ai/blog/introducing-explosion-ai"><img src="https://explosion.ai/blog/img/announcing-explosion-ai.jpg"></img></a></p><p>The problem with developing a machine learning model is that you don't know how well it'll work until you try — and trying is very expensive. Obviously, this risk is unappealing, but the existing solution in the market, one-size-fits-all cloud services, are even worse. We're launching Explosion AI to give you a better option.</p><p><a href="https://explosion.ai/blog/introducing-explosion-ai">Read more &rarr;</a></p>]]></description><pubDate>Mon, 03 Oct 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/introducing-explosion-ai</link><guid isPermaLink="true">https://explosion.ai/blog/introducing-explosion-ai</guid></item><item><title>displaCy.js: An open-source NLP visualiser for the modern web</title><description><![CDATA[<p><a href="https://explosion.ai/blog/displacy-js-nlp-visualizer"><img src="https://explosion.ai/blog/img/displacy-js.jpg"></img></a></p><p>With new offerings from Google, Microsoft and others, there are now a range of excellent cloud APIs for syntactic dependencies. A key part of these services is the interactive demo, where you enter a sentence and see the resulting annotation. We're pleased to announce the release of displaCy.js, a  modern and service-independent visualisation library. We hope this makes it easy to compare different services, and explore your own in-house models.</p><p><a href="https://explosion.ai/blog/displacy-js-nlp-visualizer">Read more &rarr;</a></p>]]></description><pubDate>Mon, 03 Oct 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/displacy-js-nlp-visualizer</link><guid isPermaLink="true">https://explosion.ai/blog/displacy-js-nlp-visualizer</guid></item><item><title>How front-end development can improve Artificial Intelligence</title><description><![CDATA[<p><a href="https://explosion.ai/blog/how-front-end-can-improve-ai"><img src="https://explosion.ai/blog/img/ai-frontend.jpg"></img></a></p><p>What's holding back Artificial Intelligence? While researchers rightly focus on better algorithms, there are a lot more things to be done. In this post I'll discuss three ways in which front-end development can improve AI technology: by improving the collection of annotated data, communicating the capabilities of the technology to key stakeholders, and exploring the system's behaviours and errors.</p><p><a href="https://explosion.ai/blog/how-front-end-can-improve-ai">Read more &rarr;</a></p>]]></description><pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/how-front-end-can-improve-ai</link><guid isPermaLink="true">https://explosion.ai/blog/how-front-end-can-improve-ai</guid></item><item><title>A natural language user interface is just a user interface</title><description><![CDATA[<p><a href="https://explosion.ai/blog/natural-user-interface"><img src="https://explosion.ai/blog/img/natural-user-interface.jpg"></img></a></p><p>Let’s say you’re writing an application, and you want to give it a conversational interface: your users will type some command, and your application will do something in response, possibly after asking for clarification.</p><p><a href="https://explosion.ai/blog/natural-user-interface">Read more &rarr;</a></p>]]></description><pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/natural-user-interface</link><guid isPermaLink="true">https://explosion.ai/blog/natural-user-interface</guid></item><item><title>SyntaxNet in context: Understanding Google's new TensorFlow NLP model</title><description><![CDATA[<p><a href="https://explosion.ai/blog/syntaxnet-in-context"><img src="https://explosion.ai/blog/img/syntaxnet.jpg"></img></a></p><p>Yesterday, Google open sourced their Tensorflow-based dependency parsing library, SyntaxNet. The library gives access to a line of neural network parsing models published by Google researchers over the last two years. I've been following this work closely since it was published, and have been looking forward to the software being published. This post tries to provide some context around the release — what's new here, and how important is it?</p><p><a href="https://explosion.ai/blog/syntaxnet-in-context">Read more &rarr;</a></p>]]></description><pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/syntaxnet-in-context</link><guid isPermaLink="true">https://explosion.ai/blog/syntaxnet-in-context</guid></item><item><title>spaCy now speaks German</title><description><![CDATA[<p><a href="https://explosion.ai/blog/german-model"><img src="https://explosion.ai/blog/img/german.jpg"></img></a></p><p>Many people have asked us to make spaCy available for their language. Being based in Berlin, German was an obvious choice for our first second language. Now spaCy can do all the cool things you use for processing English on German text too. But more importantly, teaching spaCy to speak German required us to drop some comfortable but English-specific assumptions about how language works and made spaCy fit to learn more languages in the future.</p><p><a href="https://explosion.ai/blog/german-model">Read more &rarr;</a></p>]]></description><pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/german-model</link><guid isPermaLink="true">https://explosion.ai/blog/german-model</guid></item><item><title>Multi-threading spaCy's parser and named entity recognizer</title><description><![CDATA[<p><a href="https://explosion.ai/blog/multithreading-with-cython"><img src="https://explosion.ai/blog/img/cython2.jpg"></img></a></p><p>In v0.100.3, we quietly rolled out support for GIL-free multi-threading for spaCy's syntactic dependency parsing and named entity recognition models. Because these models take up a lot of memory, we've wanted to release the global interpretter lock (GIL) around them for a long time.  When we finally did, it seemed a little too good to be true, so we delayed celebration — and then quickly moved on to other things. It's now past time for a write-up.</p><p><a href="https://explosion.ai/blog/multithreading-with-cython">Read more &rarr;</a></p>]]></description><pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/multithreading-with-cython</link><guid isPermaLink="true">https://explosion.ai/blog/multithreading-with-cython</guid></item><item><title>Statistical NLP in the Ten Hundred Most Common English Words</title><description><![CDATA[<p><a href="https://explosion.ai/blog/eli5-computers-learn-reading"><img src="https://explosion.ai/blog/img/basic-english.jpg"></img></a></p><p>When I was little, my favorite TV shows all had talking computers. Now I’m big and there are still no talking computers, so I’m trying to make some myself. Well, we can make computers say things. But when we say things back, they don’t really understand. Why not?</p><p><a href="https://explosion.ai/blog/eli5-computers-learn-reading">Read more &rarr;</a></p>]]></description><pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/eli5-computers-learn-reading</link><guid isPermaLink="true">https://explosion.ai/blog/eli5-computers-learn-reading</guid></item><item><title>Rebuilding a Website with Modular Markup Components</title><description><![CDATA[<p><a href="https://explosion.ai/blog/modular-markup"><img src="https://explosion.ai/blog/img/modular-markup.jpg"></img></a></p><p>In a small team, everyone should be able to contribute content to the website and make use of the full set of visual components, without having to worry about design or write complex HTML. To help us write docs, tutorials and blog posts about spaCy, we've developed a powerful set of modularized markup components, implemented using Jade.</p><p><a href="https://explosion.ai/blog/modular-markup">Read more &rarr;</a></p>]]></description><pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/modular-markup</link><guid isPermaLink="true">https://explosion.ai/blog/modular-markup</guid></item><item><title>Sense2vec with spaCy and Gensim</title><description><![CDATA[<p><a href="https://explosion.ai/blog/sense2vec-with-spacy"><img src="https://explosion.ai/blog/img/sense2vec.jpg"></img></a></p><p>If you were doing text analytics in 2015, you were probably using word2vec. Sense2vec (Trask et. al, 2015) is a new twist on word2vec that lets you learn more interesting, detailed and context-sensitive word vectors. This post motivates the idea, explains our implementation, and comes with an interactive demo that we've found surprisingly addictive.</p><p><a href="https://explosion.ai/blog/sense2vec-with-spacy">Read more &rarr;</a></p>]]></description><pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/sense2vec-with-spacy</link><guid isPermaLink="true">https://explosion.ai/blog/sense2vec-with-spacy</guid></item><item><title>Dead Code Should Be Buried</title><description><![CDATA[<p><a href="https://explosion.ai/blog/dead-code-should-be-buried"><img src="https://explosion.ai/blog/img/deadcode.jpg"></img></a></p><p>Natural Language Processing moves fast, so maintaining a good library means constantly throwing things away. Most libraries are failing badly at this, as academics hate to editorialize. This post explains the problem, why it's so damaging, and why I wrote spaCy to do things differently.</p><p><a href="https://explosion.ai/blog/dead-code-should-be-buried">Read more &rarr;</a></p>]]></description><pubDate>Fri, 04 Sep 2015 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/dead-code-should-be-buried</link><guid isPermaLink="true">https://explosion.ai/blog/dead-code-should-be-buried</guid></item><item><title>Displaying Linguistic Structure with CSS</title><description><![CDATA[<p><a href="https://explosion.ai/blog/displacy-dependency-visualizer"><img src="https://explosion.ai/blog/img/displacy.jpg"></img></a></p><p>One of the features of the relaunch I'm most excited about is the displaCy visualizer and annotation tool. This solves two problems I've thought about a lot: first, how can I help people understand what information spaCy gives them access to? Without a good visualization, the ideas are very abstract.  Second, how can we make dependency trees easy for humans to create?</p><p><a href="https://explosion.ai/blog/displacy-dependency-visualizer">Read more &rarr;</a></p>]]></description><pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/displacy-dependency-visualizer</link><guid isPermaLink="true">https://explosion.ai/blog/displacy-dependency-visualizer</guid></item><item><title>How spaCy Works</title><description><![CDATA[<p><a href="https://explosion.ai/blog/how-spacy-works"><img src="https://explosion.ai/blog/img/how-spacy-works.jpg"></img></a></p><p>This post was pushed out in a hurry, immediately after spaCy was released.  It explains some of how spaCy is designed and implemented, and provides some quick notes explaining which algorithms were used. The post pre-dates spaCy's named entity recogniser, but it provides some detail about the tokenisation algorithm, general design, and efficiency concerns.</p><p><a href="https://explosion.ai/blog/how-spacy-works">Read more &rarr;</a></p>]]></description><pubDate>Thu, 19 Feb 2015 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/how-spacy-works</link><guid isPermaLink="true">https://explosion.ai/blog/how-spacy-works</guid></item><item><title>Introducing spaCy</title><description><![CDATA[<p><a href="https://explosion.ai/blog/introducing-spacy"><img src="https://explosion.ai/blog/img/introducing-spacy.jpg"></img></a></p><p>Computers don't understand text.  This is unfortunate, because that's what the web almost entirely consists of.  We want to recommend people text based on other text they liked.  We want to shorten text to display it on a mobile screen.  We want to aggregate it, link it, filter it, categorise it, generate it and correct it. spaCy provides a library of utility functions that help programmers build such products.</p><p><a href="https://explosion.ai/blog/introducing-spacy">Read more &rarr;</a></p>]]></description><pubDate>Thu, 19 Feb 2015 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/introducing-spacy</link><guid isPermaLink="true">https://explosion.ai/blog/introducing-spacy</guid></item><item><title>Writing C in Cython</title><description><![CDATA[<p><a href="https://explosion.ai/blog/writing-c-in-cython"><img src="https://explosion.ai/blog/img/cython.jpg"></img></a></p><p>For the last two years, I’ve done almost all of my work in Cython. And I don’t mean, I write Python, and then “Cythonize” it, with various type-declarations et cetera. I just, write Cython. I use &quot;raw&quot; C structs and arrays, and occasionally C++ vectors, with a thin wrapper around malloc/free that I wrote myself. The code is almost always exactly as fast as C/C++, because that's really all it is, but with Python right there, if I want it.</p><p><a href="https://explosion.ai/blog/writing-c-in-cython">Read more &rarr;</a></p>]]></description><pubDate>Tue, 21 Oct 2014 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/writing-c-in-cython</link><guid isPermaLink="true">https://explosion.ai/blog/writing-c-in-cython</guid></item><item><title>Parsing English in 500 Lines of Python</title><description><![CDATA[<p><a href="https://explosion.ai/blog/parsing-english-in-python"><img src="https://explosion.ai/blog/img/pizza.jpg"></img></a></p><p>This post explains how transition-based dependency parsers work, and argues that this algorithm represents a break-through in natural language understanding.  A concise sample implementation is provided, in 500 lines of Python, with no external dependencies.  This post was written in 2013. In 2015 this type of parser is now increasingly dominant.</p><p><a href="https://explosion.ai/blog/parsing-english-in-python">Read more &rarr;</a></p>]]></description><pubDate>Wed, 18 Dec 2013 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/parsing-english-in-python</link><guid isPermaLink="true">https://explosion.ai/blog/parsing-english-in-python</guid></item><item><title>A Good Part-of-Speech Tagger in about 200 Lines of Python</title><description><![CDATA[<p><a href="https://explosion.ai/blog/part-of-speech-pos-tagger-in-python"><img src="https://explosion.ai/blog/img/pos-tagger.jpg"></img></a></p><p>Up-to-date knowledge about natural language processing is mostly locked away in academia. And academics are mostly pretty self-conscious when we write. We’re careful. We don’t want to stick our necks out too much. But under-confident recommendations suck, so here’s how to write a good part-of-speech tagger.</p><p><a href="https://explosion.ai/blog/part-of-speech-pos-tagger-in-python">Read more &rarr;</a></p>]]></description><pubDate>Wed, 18 Sep 2013 00:00:00 +0000</pubDate><link>https://explosion.ai/blog/part-of-speech-pos-tagger-in-python</link><guid isPermaLink="true">https://explosion.ai/blog/part-of-speech-pos-tagger-in-python</guid></item></channel></rss>